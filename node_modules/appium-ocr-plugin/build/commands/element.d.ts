import { AppiumOcrPlugin, NextHandler } from '..';
import type { Bbox } from 'tesseract.js';
import type { ExternalDriver } from '@appium/types';
export type Location = {
    x: number;
    y: number;
};
export type Size = {
    width: number;
    height: number;
};
export type Rect = Location & Size;
export declare const OCR_ELEMENT_PREFIX = "ocr-element-";
export declare class OCRElement {
    text: string;
    confidence: number;
    rect: Rect;
    id: string;
    constructor(text: string, confidence: number, bbox: Bbox);
    get size(): Size;
    get location(): Location;
    get center(): Location;
    get asW3CElementObject(): {
        "element-6066-11e4-a52e-4f735466cecf": string;
    };
}
export declare function ocrElementGuard(this: AppiumOcrPlugin, next: NextHandler, elId: string, fn: (el: OCRElement) => Promise<any>): Promise<any>;
export declare function click(this: AppiumOcrPlugin, next: NextHandler, driver: ExternalDriver, elId: string): Promise<any>;
export declare function elementDisplayed(this: AppiumOcrPlugin, next: NextHandler, _: ExternalDriver, elId: string): Promise<any>;
export declare function getSize(this: AppiumOcrPlugin, next: NextHandler, _: ExternalDriver, elId: string): Promise<any>;
export declare function getLocation(this: AppiumOcrPlugin, next: NextHandler, _: ExternalDriver, elId: string): Promise<any>;
export declare function getElementRect(this: AppiumOcrPlugin, next: NextHandler, _: ExternalDriver, elId: string): Promise<any>;
export declare function getText(this: AppiumOcrPlugin, next: NextHandler, _: ExternalDriver, elId: string): Promise<any>;
export declare function getAttribute(this: AppiumOcrPlugin, next: NextHandler, _: ExternalDriver, attr: string, elId: string): Promise<any>;
