"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports._find = exports.findElements = exports.findElement = void 0;
const xpath_1 = require("xpath");
const xmldom_1 = require("xmldom");
const element_1 = require("./element");
// for some reason tsc can't find the errors export from basedriver, but it's there
const bdStar = __importStar(require("appium/driver"));
const { errors } = bdStar;
function findElement(next, driver, strategy, selector) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield this._find(next, driver, strategy, selector, false);
    });
}
exports.findElement = findElement;
function findElements(next, driver, strategy, selector) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield this._find(next, driver, strategy, selector, true);
    });
}
exports.findElements = findElements;
function _find(next, driver, strategy, selector, multiple) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield this.ocrContextGuard(next, () => __awaiter(this, void 0, void 0, function* () {
            if (strategy !== 'xpath') {
                throw new errors.InvalidArgumentError(`The OCR context only supports the 'xpath' locator strategy`);
            }
            const xmlStr = yield this.getPageSource(next, driver);
            const dom = new xmldom_1.DOMParser().parseFromString(xmlStr);
            const nodes = (0, xpath_1.select)(selector, dom);
            const transformNodeToOcrElement = (n) => {
                const bbox = {
                    x0: parseFloat(getNodeAttrVal(n, 'x0')),
                    y0: parseFloat(getNodeAttrVal(n, 'y0')),
                    x1: parseFloat(getNodeAttrVal(n, 'x1')),
                    y1: parseFloat(getNodeAttrVal(n, 'y1')),
                };
                const confidence = parseFloat(getNodeAttrVal(n, 'confidence'));
                const text = n.firstChild.data;
                const ocrEl = new element_1.OCRElement(text, confidence, bbox);
                this.ocrElements[ocrEl.id] = ocrEl;
                this.logger.info(`Found new element '${ocrEl.id}': [${text}][${confidence}[${JSON.stringify(ocrEl.rect)}]`);
                return ocrEl.asW3CElementObject;
            };
            const els = nodes.filter(isOcrElementNodeValid).map(transformNodeToOcrElement);
            if (!multiple) {
                if (els.length < 1) {
                    throw new errors.NoSuchElementError();
                }
                return els[0];
            }
            return els;
        }));
    });
}
exports._find = _find;
function isOcrElementNodeValid(n) {
    if (n.nodeName !== 'item') {
        return false;
    }
    if (!n.firstChild) {
        return false;
    }
    if (!n.firstChild.data) {
        return false;
    }
    return true;
}
function getNodeAttrVal(node, attr) {
    const attrObjs = Object.values(node.attributes).filter((obj) => obj.name === attr);
    if (!attrObjs.length) {
        throw new Error(`Tried to retrieve a node attribute '${attr}' but the node didn't have it`);
    }
    return attrObjs[0].value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9maW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsaUNBQTRDO0FBQzVDLG1DQUFrQztBQUNsQyx1Q0FBc0M7QUFFdEMsbUZBQW1GO0FBQ25GLHNEQUF1QztBQUN2QyxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsTUFBK0IsQ0FBQTtBQUVsRCxTQUFzQixXQUFXLENBQXdCLElBQWlCLEVBQUUsTUFBc0IsRUFBRSxRQUFnQixFQUFFLFFBQWdCOztRQUNsSSxPQUFPLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUE7SUFDcEUsQ0FBQztDQUFBO0FBRkQsa0NBRUM7QUFFRCxTQUFzQixZQUFZLENBQXdCLElBQWlCLEVBQUUsTUFBc0IsRUFBRSxRQUFnQixFQUFFLFFBQWdCOztRQUNuSSxPQUFPLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUE7SUFDbkUsQ0FBQztDQUFBO0FBRkQsb0NBRUM7QUFFRCxTQUFzQixLQUFLLENBQXdCLElBQWlCLEVBQUUsTUFBc0IsRUFBRSxRQUFnQixFQUFFLFFBQWdCLEVBQUUsUUFBaUI7O1FBQy9JLE9BQU8sTUFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxHQUFTLEVBQUU7WUFDL0MsSUFBSSxRQUFRLEtBQUssT0FBTyxFQUFFO2dCQUN0QixNQUFNLElBQUksTUFBTSxDQUFDLG9CQUFvQixDQUFDLDREQUE0RCxDQUFDLENBQUE7YUFDdEc7WUFDRCxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxD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