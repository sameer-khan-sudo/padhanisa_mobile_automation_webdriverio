"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPageSource = void 0;
const lodash_1 = require("lodash");
function converOcrToXml(ocr) {
    function getXmlNodes(ocrItemArray) {
        return ocrItemArray.map((i) => (`<item ` +
            `confidence="${i.confidence}" ` +
            `x0="${i.bbox.x0}" x1="${i.bbox.x1}" ` +
            `y0="${i.bbox.y0}" y1="${i.bbox.y1}"` +
            `>${(0, lodash_1.escape)(i.text).trim()}</item>`));
    }
    function xmlNodeSection(nodes) {
        return nodes.map((n) => `\t\t${n}`).join('\n');
    }
    const wordNodes = xmlNodeSection(getXmlNodes(ocr.words));
    const lineNodes = xmlNodeSection(getXmlNodes(ocr.lines));
    const blockNodes = xmlNodeSection(getXmlNodes(ocr.blocks));
    const words = `\t<words>\n${wordNodes}\n\t</words>`;
    const lines = `\t<lines>\n${lineNodes}\n\t</lines>`;
    const blocks = `\t<blocks>\n${blockNodes}\n\t</blocks>`;
    return `<?xml version="1.0" encoding="utf-8"?>\n` +
        `<OCR>\n${words}\n${lines}\n${blocks}\n</OCR>`;
}
function getPageSource(next, driver) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!this.isInOcrContext) {
            return yield next();
        }
        const ocrRes = yield this.getOcrText(next, driver);
        return converOcrToXml(ocrRes);
    });
}
exports.getPageSource = getPageSource;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbW1hbmRzL3NvdXJjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFQSxtQ0FBK0I7QUFFL0IsU0FBUyxjQUFjLENBQUMsR0FBZ0I7SUFFcEMsU0FBUyxXQUFXLENBQUMsWUFBdUI7UUFDeEMsT0FBTyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUMzQixRQUFRO1lBQ0osZUFBZSxDQUFDLENBQUMsVUFBVSxJQUFJO1lBQy9CLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUk7WUFDdEMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRztZQUN6QyxJQUFJLElBQUEsZUFBTSxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUNyQyxDQUFDLENBQUE7SUFDTixDQUFDO0lBRUQsU0FBUyxjQUFjLENBQUMsS0FBZTtRQUNuQyxPQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDbEQsQ0FBQztJQUVELE1BQU0sU0FBUyxHQUFHLGNBQWMsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7SUFDeEQsTUFBTSxTQUFTLEdBQUcsY0FBYyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQTtJQUN4RCxNQUFNLFVBQVUsR0FBRyxjQUFjLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFBO0lBRTFELE1BQU0sS0FBSyxHQUFHLGNBQWMsU0FBUyxjQUFjLENBQUE7SUFDbkQsTUFBTSxLQUFLLEdBQUcsY0FBYyxTQUFTLGNBQWMsQ0FBQTtJQUNuRCxNQUFNLE1BQU0sR0FBRyxlQUFlLFVBQVUsZUFBZSxDQUFBO0lBRXZELE9BQU8sMENBQTBDO1FBQzFDLFVBQVUsS0FBSyxLQUFLLEtBQUssS0FBSyxNQUFNLFVBQVUsQ0FBQTtBQUN6RCxDQUFDO0FBRUQsU0FBc0IsYUFBYSxDQUF3QixJQUFpQixFQUFFLE1BQXNCOztRQUNoRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN0QixPQUFPLE1BQU0sSUFBSSxFQUFFLENBQUE7U0FDdEI7UUFDRCxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFBO1FBQ2xELE9BQU8sY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ2pDLENBQUM7Q0FBQTtBQU5ELHNDQU1DIn0=