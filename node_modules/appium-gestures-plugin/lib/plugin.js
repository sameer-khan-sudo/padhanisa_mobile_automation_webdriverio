"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const base_plugin_1 = __importDefault(require("@appium/base-plugin"));
const dragAndDrop_1 = __importDefault(require("./gestures/dragAndDrop"));
const swipe_1 = require("./gestures/swipe");
const doubleTap_1 = __importDefault(require("./gestures/doubleTap"));
const longPress_1 = __importDefault(require("./gestures/longPress"));
class GesturesPlugin extends base_plugin_1.default {
    static executeMethodMap = {
        'gesture: dragAndDrop': {
            command: 'dragAndDrop',
            params: { required: ['sourceId', 'destinationId'] },
        },
        'gesture: swipe': {
            command: 'swipe',
            params: {
                required: ['elementId', 'percentage', 'direction'],
            },
        },
        'gesture: scrollElementIntoView': {
            command: 'scrollElementIntoView',
            params: {
                required: ['scrollableView', 'strategy', 'selector', 'percentage', 'direction', 'maxCount'],
            },
        },
        'gesture: doubleTap': {
            command: 'doubleTap',
            params: { required: ['elementId'] },
        },
        'gesture: longPress': {
            command: 'longPress',
            params: { required: ['elementId', 'pressure', 'duration'] },
        },
    };
    constructor(pluginName) {
        super(pluginName);
    }
    async execute(next, driver, script, args) {
        return await this.executeMethod(next, driver, script, args);
    }
    async swipe(next, driver, elementId, percentage, direction) {
        await (0, swipe_1.swipe)(elementId, percentage, direction, driver);
    }
    async scrollElementIntoView(next, driver, scrollableView, strategy, selector, percentage, direction, maxCount) {
        await (0, swipe_1.scrollElementIntoView)({
            scrollableView,
            strategy,
            selector,
            percentage,
            direction,
            maxCount,
            driver,
        });
    }
    async dragAndDrop(next, driver, sourceId, destinationId) {
        await (0, dragAndDrop_1.default)(sourceId, destinationId, driver);
    }
    async doubleTap(next, driver, elementId) {
        await (0, doubleTap_1.default)(elementId, driver);
    }
    async longPress(next, driver, elementId, pressure, duration) {
        await (0, longPress_1.default)(elementId, pressure, duration, driver);
    }
}
exports.default = GesturesPlugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2luLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3BsdWdpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNFQUE2QztBQUM3Qyx5RUFBaUQ7QUFDakQsNENBQWdFO0FBQ2hFLHFFQUE2QztBQUM3QyxxRUFBNkM7QUFFN0MsTUFBcUIsY0FBZSxTQUFRLHFCQUFVO0lBQ3BELE1BQU0sQ0FBQyxnQkFBZ0IsR0FBRztRQUN4QixzQkFBc0IsRUFBRTtZQUN0QixPQUFPLEVBQUUsYUFBYTtZQUN0QixNQUFNLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxVQUFVLEVBQUUsZUFBZSxDQUFDLEVBQUU7U0FDcEQ7UUFDRCxnQkFBZ0IsRUFBRTtZQUNoQixPQUFPLEVBQUUsT0FBTztZQUNoQixNQUFNLEVBQUU7Z0JBQ04sUUFBUSxFQUFFLENBQUMsV0FBVyxFQUFFLFlBQVksRUFBRSxXQUFXLENBQUM7YUFDbkQ7U0FDRjtRQUNELGdDQUFnQyxFQUFFO1lBQ2hDLE9BQU8sRUFBRSx1QkFBdUI7WUFDaEMsTUFBTSxFQUFFO2dCQUNOLFFBQVEsRUFBRSxDQUFDLGdCQUFnQixFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUM7YUFDNUY7U0FDRjtRQUNELG9CQUFvQixFQUFFO1lBQ3BCLE9BQU8sRUFBRSxXQUFXO1lBQ3BCLE1BQU0sRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFFO1NBQ3BDO1FBQ0Qsb0JBQW9CLEVBQUU7WUFDcEIsT0FBTyxFQUFFLFdBQVc7WUFDcEIsTUFBTSxFQUFFLEVBQUUsUUFBUSxFQUFFLENBQUMsV0FBVyxFQUFFLFVBQVUsRUFBRSxVQUFVLENBQUMsRUFBRTtTQUM1RDtLQUNGLENBQUM7SUFFRixZQUFZLFVBQVU7UUFDcEIsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BCLENBQUM7SUFFRCxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLElBQUk7UUFDdEMsT0FBTyxNQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVM7UUFDeEQsTUFBTSxJQUFBLGFBQUssRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsS0FBSyxDQUFDLHFCQUFxQixDQUN6QixJQUFJLEVBQ0osTUFBTSxFQUNOLGNBQWMsRUFDZCxRQUFRLEVBQ1IsUUFBUSxFQUNSLFVBQVUsRUFDVixTQUFTLEVBQ1QsUUFBUTtRQUVSLE1BQU0sSUFBQSw2QkFBcUIsRUFBQztZQUMxQixjQUFjO1lBQ2QsUUFBUTtZQUNSLFFBQVE7WUFDUixVQUFVO1lBQ1YsU0FBUztZQUNULFFBQVE7WUFDUixNQUFNO1NBQ1AsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsYUFBYTtRQUNyRCxNQUFNLElBQUEscUJBQVcsRUFBQyxRQUFRLEVBQUUsYUFBYSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFRCxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsU0FBUztRQUNyQyxNQUFNLElBQUEsbUJBQVMsRUFBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVE7UUFDekQsTUFBTSxJQUFBLG1CQUFTLEVBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDekQsQ0FBQzs7QUF2RUgsaUNBd0VDIn0=