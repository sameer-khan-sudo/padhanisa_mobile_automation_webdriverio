export default class ImageElementPlugin extends BasePlugin {
    static newMethodMap: {
        readonly '/session/:sessionId/appium/compare_images': {
            readonly POST: {
                readonly command: "compareImages";
                readonly payloadParams: {
                    readonly required: readonly ["mode", "firstImage", "secondImage"];
                    readonly optional: readonly ["options"];
                };
                readonly neverProxy: true;
            };
        };
    };
    constructor(pluginName: any);
    finder: ImageElementFinder;
    compareImages(next: any, driver: any, ...args: any[]): Promise<import("./compare").ComparisonResult>;
    findElement(next: any, driver: any, ...args: any[]): Promise<any>;
    findElements(next: any, driver: any, ...args: any[]): Promise<any>;
    /**
     *
     * @param {boolean} multiple
     * @param {*} next
     * @param {*} driver
     * @param  {...any} args
     * @returns {Promise<any>}
     */
    _find(multiple: boolean, next: any, driver: any, ...args: any[]): Promise<any>;
    handle(next: any, driver: any, cmdName: any, ...args: any[]): Promise<any>;
}
import { BasePlugin } from 'appium/plugin';
import ImageElementFinder from './finder';
export function getImgElFromArgs(args: any): any;
import { IMAGE_STRATEGY } from './constants';
export { IMAGE_STRATEGY };
//# sourceMappingURL=plugin.d.ts.map