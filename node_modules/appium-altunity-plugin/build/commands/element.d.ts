import { AltUnityPlugin } from '..';
import { NextHandler } from '../types';
import { BaseDriver } from 'appium/driver';
import { AltElement, Position } from '../client';
import { ExternalDriver } from '@appium/types';
export declare const UNITY_ELEMENT_PREFIX = "unity-element-";
export declare const ALL_COMPONENTS_PROP = "*";
export declare class UnityElement {
    element: AltElement;
    id: string;
    constructor(element: AltElement);
    get location(): Position;
    get asW3CElementObject(): {
        "element-6066-11e4-a52e-4f735466cecf": string;
    };
}
export declare function unityElementGuard(this: AltUnityPlugin, next: NextHandler, elId: string, fn: (el: UnityElement) => Promise<any>): Promise<any>;
export declare function click(this: AltUnityPlugin, next: NextHandler, driver: BaseDriver, elId: string): Promise<any>;
export declare function elementDisplayed(this: AltUnityPlugin, next: NextHandler, driver: ExternalDriver, elId: string): Promise<any>;
export declare function getLocation(this: AltUnityPlugin, next: NextHandler, _: BaseDriver, elId: string): Promise<any>;
export declare function getElementRect(this: AltUnityPlugin, next: NextHandler, _: BaseDriver, elId: string): Promise<any>;
export declare function getText(this: AltUnityPlugin, next: NextHandler, _: BaseDriver, elId: string): Promise<any>;
export declare function getAttribute(this: AltUnityPlugin, next: NextHandler, _: BaseDriver, attr: string, elId: string): Promise<any>;
export declare function getProperty(this: AltUnityPlugin, next: NextHandler, _: BaseDriver, prop: string, elId: string): Promise<string>;
