import { BasePlugin } from 'appium/plugin';
import type { NextHandler } from './types';
import AltUnityClient, { AltBy, AltElement, AltKeyCode } from './client';
import { getPageSource, getContexts, getCurrentContext, setContext, unityElementGuard, click, elementDisplayed, getLocation, getElementRect, getText, getAttribute, getProperty, UnityElement, findElement, findElements, _find, _findWithAltBy, performActions, _performKeyActions, _performPointerActions, getUrl, setUrl, execute, execute_getTimeScale, execute_setTimeScale, execute_setComponentProperty } from './commands';
import { ExternalDriver } from '@appium/types';
export type Size = {
    width: number;
    height: number;
};
export declare const UNITY_CONTEXT = "UNITY";
export declare const enum Platform {
    Mac = "mac",
    Windows = "windows",
    Linux = "linux",
    iOS = "ios",
    Android = "android"
}
declare class AltUnityPlugin extends BasePlugin {
    client: AltUnityClient;
    platform?: Platform;
    isInUnityContext: boolean;
    unityElements: {
        [id: string]: UnityElement;
    };
    cachedScreenDims?: Size;
    getPageSource: typeof getPageSource;
    getCurrentContext: typeof getCurrentContext;
    getContexts: typeof getContexts;
    setContext: typeof setContext;
    unityElementGuard: typeof unityElementGuard;
    click: typeof click;
    elementDisplayed: typeof elementDisplayed;
    getLocation: typeof getLocation;
    getElementRect: typeof getElementRect;
    getText: typeof getText;
    getAttribute: typeof getAttribute;
    getProperty: typeof getProperty;
    findElement: typeof findElement;
    findElements: typeof findElements;
    _find: typeof _find;
    _findWithAltBy: typeof _findWithAltBy;
    performActions: typeof performActions;
    _performKeyActions: typeof _performKeyActions;
    _performPointerActions: typeof _performPointerActions;
    getUrl: typeof getUrl;
    setUrl: typeof setUrl;
    execute: typeof execute;
    execute_getTimeScale: typeof execute_getTimeScale;
    execute_setTimeScale: typeof execute_setTimeScale;
    execute_setComponentProperty: typeof execute_setComponentProperty;
    constructor(name: string);
    shouldAvoidProxy(method: string, route: string): boolean;
    createSession(next: NextHandler, driver: ExternalDriver): Promise<any[]>;
    getPlatform(platformName: string): Platform;
    unityContextGuard(next: NextHandler, fn: () => Promise<any>): Promise<any>;
    getCachedScreenDims(driver: ExternalDriver): Promise<Size>;
    deleteSession(next: NextHandler): Promise<void>;
}
export { AltUnityPlugin, AltUnityClient, AltBy, AltKeyCode, AltElement, };
