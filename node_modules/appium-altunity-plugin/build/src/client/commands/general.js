"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setTimeScale = exports.getTimeScale = exports.loadScene = exports.getCurrentScene = exports.getScreenshotAsPNG = exports.getScreenshotAsB64 = exports.getServerVersion = void 0;
const alt_element_1 = __importDefault(require("../alt-element"));
async function getServerVersion() {
    return await this.sendSimpleCommand('getServerVersion');
}
exports.getServerVersion = getServerVersion;
async function getScreenshotAsB64() {
    return await this.sendTwoPartCommand('getPNGScreenshot');
}
exports.getScreenshotAsB64 = getScreenshotAsB64;
async function getScreenshotAsPNG() {
    const b64Str = await this.getScreenshotAsB64();
    return Buffer.from(b64Str, 'base64');
}
exports.getScreenshotAsPNG = getScreenshotAsPNG;
async function getCurrentScene() {
    const res = await this.sendSimpleCommand('getCurrentScene');
    return (new alt_element_1.default(this, res)).name;
}
exports.getCurrentScene = getCurrentScene;
async function loadScene(sceneName, loadSingle = true) {
    await this.sendTwoPartCommand('loadScene', { sceneName, loadSingle }, ['Ok', 'Scene Loaded']);
}
exports.loadScene = loadScene;
async function getTimeScale() {
    const timeScale = await this.sendSimpleCommand('getTimeScale');
    return parseFloat(timeScale);
}
exports.getTimeScale = getTimeScale;
async function setTimeScale(timeScale) {
    await this.sendSimpleCommand('setTimeScale', { timeScale: timeScale.toString() });
}
exports.setTimeScale = setTimeScale;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jbGllbnQvY29tbWFuZHMvZ2VuZXJhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxpRUFBNEQ7QUFFckQsS0FBSyxVQUFVLGdCQUFnQjtJQUNsQyxPQUFPLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLGtCQUFrQixDQUFDLENBQUE7QUFDM0QsQ0FBQztBQUZELDRDQUVDO0FBRU0sS0FBSyxVQUFVLGtCQUFrQjtJQUNwQyxPQUFPLE1BQU0sSUFBSSxDQUFDLGtCQUFrQixDQUFDLGtCQUFrQixDQUFDLENBQUE7QUFDNUQsQ0FBQztBQUZELGdEQUVDO0FBRU0sS0FBSyxVQUFVLGtCQUFrQjtJQUNwQyxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFBO0lBQzlDLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUE7QUFDeEMsQ0FBQztBQUhELGdEQUdDO0FBRU0sS0FBSyxVQUFVLGVBQWU7SUFDakMsTUFBTSxHQUFHLEdBQUcsTUFBTSxJQUFJLENBQUMsaUJBQWlCLENBQUMsaUJBQWlCLENBQUMsQ0FBQTtJQUMzRCxPQUFPLENBQUMsSUFBSSxxQkFBVSxDQUFDLElBQUksRUFBRSxHQUFxQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUE7QUFDN0QsQ0FBQztBQUhELDBDQUdDO0FBRU0sS0FBSyxVQUFVLFNBQVMsQ0FBdUIsU0FBaUIsRUFBRSxhQUFzQixJQUFJO0lBQy9GLE1BQU0sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsRUFBRSxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFBO0FBQy9GLENBQUM7QUFGRCw4QkFFQztBQUVNLEtBQUssVUFBVSxZQUFZO0lBQzlCLE1BQU0sU0FBUyxHQUFHLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLGNBQWMsQ0FBQyxDQUFBO0lBQzlELE9BQU8sVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0FBQ2hDLENBQUM7QUFIRCxvQ0FHQztBQUVNLEtBQUssVUFBVSxZQUFZLENBQXVCLFNBQWlCO0lBQ3RFLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLGNBQWMsRUFBRSxFQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsUUFBUSxFQUFFLEVBQUMsQ0FBQyxDQUFBO0FBQ25GLENBQUM7QUFGRCxvQ0FFQyJ9